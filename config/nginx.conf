events {  }
http {
  upstream puma {
    server unix:///var/run/puma.sock;
  }

  server {
    listen 80 default_server deferred;
    # server_name example.com;

    root /app/public;
    access_log /app/log/nginx.access.log;
    error_log /app/log/nginx.error.log info;

    error_page 500 502 503 504 /500.html;
    client_max_body_size 20M;
    keepalive_timeout 5;

    # If static assets are ever needed to go though nginx
    # location ^~ /assets/ {
    #   gzip_static on;
    #   expires max;
    #   add_header Cache-Control public;
    # }

    # Send requests of path:
    # - api/
    # - oauth/
    # - _health/
    # through to puma
    location /(api|oauth|_health)/ {
      proxy_pass http://puma;
      break;
    }

    # Send all other requests to the index.html
    # stored up on s3
    # try_files $uri/index.html $uri @puma;

    location / {
       proxy_http_version     1.1;
       proxy_set_header       Host 's3.amazonaws.com';
       proxy_set_header       Authorization '';
       proxy_hide_header      x-amz-id-2;
       proxy_hide_header      x-amz-request-id;
       proxy_hide_header      Set-Cookie;
       proxy_ignore_headers   "Set-Cookie";
       proxy_buffering        off;
       proxy_intercept_errors on;

       set $indexfile         "s3.amazonaws.com/aeonvera-production/ember/dist/index.html";
       proxy_pass             http://$indexfile;
     }

    location @puma {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      proxy_pass http://puma;
    }
  }
}
